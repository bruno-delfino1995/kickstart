return {
  -- never forget your keybinds
  {
    'folke/which-key.nvim',
    opts = {
      spec = {
        { "<leader>-", "<cmd>Carbon<cr>", desc = "Explorer", nowait = true, remap = false },
        { "<leader>F", "<cmd>Telescope live_grep<cr>", desc = "Find Text", nowait = true, remap = false },
        { "<leader>P", "<cmd>Telescope projects<cr>", desc = "Projects", nowait = true, remap = false },
        { "<leader>a", "<cmd>Startify<cr>", desc = "Dashboard", nowait = true, remap = false },
        { "<leader>b", "<cmd>lua require('telescope.builtin').buffers()<cr>", desc = "Buffers", nowait = true, remap = false },
        { "<leader>c", "<cmd>Bdelete!<cr>", desc = "Close Buffer", nowait = true, remap = false },
        { "<leader>f", "<cmd>lua require('telescope.builtin').find_files()<cr>", desc = "Find files", nowait = true, remap = false },
        { "<leader>g", group = "Git", nowait = true, remap = false },
        { "<leader>gR", "<cmd>lua require 'gitsigns'.reset_buffer()<cr>", desc = "Reset Buffer", nowait = true, remap = false },
        { "<leader>gb", "<cmd>Telescope git_branches<cr>", desc = "Checkout branch", nowait = true, remap = false },
        { "<leader>gc", "<cmd>Telescope git_commits<cr>", desc = "Checkout commit", nowait = true, remap = false },
        { "<leader>gd", "<cmd>Gitsigns diffthis HEAD<cr>", desc = "Diff", nowait = true, remap = false },
        { "<leader>gg", "<cmd>lua require 'neogit'.open()<cr>", desc = "Neogit", nowait = true, remap = false },
        { "<leader>gj", "<cmd>lua require 'gitsigns'.next_hunk()<cr>", desc = "Next Hunk", nowait = true, remap = false },
        { "<leader>gk", "<cmd>lua require 'gitsigns'.prev_hunk()<cr>", desc = "Prev Hunk", nowait = true, remap = false },
        { "<leader>gl", "<cmd>lua require 'gitsigns'.blame_line()<cr>", desc = "Blame", nowait = true, remap = false },
        { "<leader>go", "<cmd>Telescope git_status<cr>", desc = "Open changed file", nowait = true, remap = false },
        { "<leader>gp", "<cmd>lua require 'gitsigns'.preview_hunk()<cr>", desc = "Preview Hunk", nowait = true, remap = false },
        { "<leader>gr", "<cmd>lua require 'gitsigns'.reset_hunk()<cr>", desc = "Reset Hunk", nowait = true, remap = false },
        { "<leader>gs", "<cmd>lua require 'gitsigns'.stage_hunk()<cr>", desc = "Stage Hunk", nowait = true, remap = false },
        { "<leader>gu", "<cmd>lua require 'gitsigns'.undo_stage_hunk()<cr>", desc = "Undo Stage Hunk", nowait = true, remap = false },
        { "<leader>h", "<cmd>nohlsearch<cr>", desc = "No Highlight", nowait = true, remap = false },
        { "<leader>l", group = "LSP", nowait = true, remap = false },
        { "<leader>lI", "<cmd>Mason<cr>", desc = "Installer", nowait = true, remap = false },
        { "<leader>lS", "<cmd>Telescope lsp_dynamic_workspace_symbols<cr>", desc = "Workspace Symbols", nowait = true, remap = false },
        { "<leader>la", "<cmd>lua vim.lsp.buf.code_action()<cr>", desc = "Code Action", nowait = true, remap = false },
        { "<leader>ld", "<cmd>Telescope lsp_document_diagnostics<cr>", desc = "Document Diagnostics", nowait = true, remap = false },
        { "<leader>lf", "<cmd>lua vim.lsp.buf.formatting()<cr>", desc = "Format", nowait = true, remap = false },
        { "<leader>li", "<cmd>LspInfo<cr>", desc = "Info", nowait = true, remap = false },
        { "<leader>lj", "<cmd>lua vim.lsp.diagnostic.goto_next()<CR>", desc = "Next Diagnostic", nowait = true, remap = false },
        { "<leader>lk", "<cmd>lua vim.lsp.diagnostic.goto_prev()<cr>", desc = "Prev Diagnostic", nowait = true, remap = false },
        { "<leader>ll", "<cmd>lua vim.lsp.codelens.run()<cr>", desc = "CodeLens Action", nowait = true, remap = false },
        { "<leader>lq", "<cmd>lua vim.lsp.diagnostic.set_loclist()<cr>", desc = "Quickfix", nowait = true, remap = false },
        { "<leader>lr", "<cmd>lua vim.lsp.buf.rename()<cr>", desc = "Rename", nowait = true, remap = false },
        { "<leader>ls", "<cmd>Telescope aerial<cr>", desc = "Document Symbols", nowait = true, remap = false },
        { "<leader>lw", "<cmd>Telescope lsp_workspace_diagnostics<cr>", desc = "Workspace Diagnostics", nowait = true, remap = false },
        { "<leader>p", "<cmd>Lazy<cr>", desc = "Lazy", nowait = true, remap = false },
        { "<leader>q", "<cmd>q!<cr>", desc = "Quit", nowait = true, remap = false },
        { "<leader>s", group = "Search", nowait = true, remap = false },
        { "<leader>sC", "<cmd>Telescope commands<cr>", desc = "Command", nowait = true, remap = false },
        { "<leader>sM", "<cmd>Telescope man_pages<cr>", desc = "Man Page", nowait = true, remap = false },
        { "<leader>sR", "<cmd>Telescope registers<cr>", desc = "Register", nowait = true, remap = false },
        { "<leader>sb", "<cmd>Telescope git_branches<cr>", desc = "Branch", nowait = true, remap = false },
        { "<leader>sc", "<cmd>Telescope colorscheme<cr>", desc = "Colorscheme", nowait = true, remap = false },
        { "<leader>sh", "<cmd>Telescope help_tags<cr>", desc = "Help", nowait = true, remap = false },
        { "<leader>sk", "<cmd>Telescope keymaps<cr>", desc = "Keymap", nowait = true, remap = false },
        { "<leader>sr", "<cmd>Telescope oldfiles<cr>", desc = "Recent File", nowait = true, remap = false },
        { "<leader>t", group = "Toggle", nowait = true, remap = false },
        { "<leader>tf", "<cmd>NeoZoomToggle<cr>", desc = "Focus", nowait = true, remap = false },
        { "<leader>w", "<cmd>w!<cr>", desc = "Save", nowait = true, remap = false },
      },
    },
  },
}
